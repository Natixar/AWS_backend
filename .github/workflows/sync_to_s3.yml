# This is a basic workflow to help you get started with Actions

name: Synchronize S3 bucket with AWS Cloudformation resource descriptions

run-name: Synchronize Natixar back-end IaaS to AWS S3 by @${{ github.actor }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Get temporary credentials
      - name: Setup AWS with Certificate Authentication
        id: aws_auth
        uses: Natixar/AWS_actions/auth_with_certificate@main
        with:
          certificate_content: ${{ vars.AWS_GITHUB_CERTIFICATE }}
          private_key: ${{ secrets.AWS_GITHUB_PRIVATE_KEY }}
          role_arn: arn:aws:iam::975050054945:role/ServiceRoleSyncS3InfrastructureAsCode
          trust_anchor_arn: arn:aws:rolesanywhere:eu-west-3:975050054945:trust-anchor/0feca5f4-ef79-41a6-a8ec-2c7bab0221d0
          
      # Syncs the files using temporary credentials          
      - name: Sync files to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.aws_auth.outputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.aws_auth.outputs.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ steps.aws_auth.outputs.AWS_SESSION_TOKEN }}
        run: |
          aws s3 sync . s3://natixar-infrastructure-as-code/AWS_backend --no-progress

